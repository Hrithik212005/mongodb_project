use Employee

db.details.insertMany([
{
    '_id': 1, 
'name': 'Abhi', 
'email':'Abhi@gmail.com', 
'address':{'City':['Mysore','Banaglore']}, 
'verified':'false',   
'gender': 'M',  
'age':20 
},
{
'_id': 2,  
'name': 'Pooja', 
'email':'Pooja@gmail.com', 
'address':{'City':['Hubli','Davangere']}, 
'verified':'false', 
'gender': 'F',  
'age':18 
},
{
'_id': 3,'name': 'Ryan', 
'email':'Ryan@gmail.com', 
'address':{'City':['Mangalore','Udupi']}, 
'verified':'false', 
'gender': 'M',  
'age':21 
},
{
'_id': 4,  
'regno': 210243,  
'gender': 'M', 
'verified':'false',  
'age': 16
} 
]);

# Display all data
db.details.find()

# Demonstrate How To Use  $Exist ie Check Whether  Name  Exists In Document Or not and if Name Field Exists In Document Then  Fetches Only Those Records 
db.details.find({ name: { $exists: true } })

# Demonstrate How To Use  $Exist Ie Check Whether  Name Does not   Exists In Document ,Then  Fetches Only Those Records
db.details.find({ name: { $exists: false } })

# Demonstrate How to use  $Exist To Check Whether  Name  Exists In Document  And  Age >18 
db.details.find({
  name: { $exists: true },
  age: { $gt: 18 }
})

# Query to Find Documents Where a Nested Field Exists using Exist Operator
db.details.find({ "nestedField.subField": { $exists: true } })

# Query to find email exists in document ,if exists then  update field verified=true using updateMany 
db.details.updateMany(
  { email: { $exists: true } },
  { $set: { verified: true } }
)

